<Window
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="clr-namespace:DIDEx.Views"
    mc:Ignorable="d" 
    x:Class="DIDEx.MainWindow"             
             prism:ViewModelLocator.AutoWireViewModel="True" Width="1080"
        d:DesignHeight="1882.92" WindowState="Maximized" Height="1920" >
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True" Background="#FF1A61F9">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter"  Grid.Column="1" Focusable="False"  HorizontalAlignment="Center" Margin="0,20.693,50,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="OpacityMask" TargetName="templateRoot" Value="#FF31B4FF"/>
                                <Setter Property="Background" TargetName="templateRoot" Value="#FF73D3FF"/>
                                <Setter Property="Background" Value="#FF0A9BFF"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle2" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                            <Grid.Background>
                                <ImageBrush ImageSource="/DIDEx;component/Resources/menu_1.png"/>
                            </Grid.Background>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>

                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="0" Width="0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="templateRoot">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/DIDEx;component/Resources/menu_1_1.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle3" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                            <Grid.Background>
                                <ImageBrush ImageSource="/DIDEx;component/Resources/menu_2.png"/>
                            </Grid.Background>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>

                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="templateRoot">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/DIDEx;component/Resources/menu_2_2.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle4" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                            <Grid.Background>
                                <ImageBrush ImageSource="/DIDEx;component/Resources/menu_3.png"/>
                            </Grid.Background>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>

                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="templateRoot">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/DIDEx;component/Resources/menu_3_3.png"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle5" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                            <Grid.Background>
                                <ImageBrush ImageSource="/DIDEx;component/Resources/menu_4.png"/>
                            </Grid.Background>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>

                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="templateRoot">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/DIDEx;component/Resources/menu_4_4.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Background>
        <ImageBrush/>
    </Window.Background>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding CloseWindowCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding CustomPopupRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <views:Videos/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="154"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="200"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Height="153">
            <Grid.Background>
                <ImageBrush ImageSource="/DIDEx;component/Resources/top.png"/>
            </Grid.Background>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="316*"/>
                <ColumnDefinition Width="70*"/>
                <ColumnDefinition Width="263*"/>
                <ColumnDefinition Width="195"/>
                <ColumnDefinition Width="213*"/>
                <ColumnDefinition Width="0*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Width="200" Height="70">
                <Grid.Background>
                    <ImageBrush ImageSource="/DIDEx;component/Resources/logo.gif"/>
                </Grid.Background>
                <Grid.InputBindings>
                    <MouseBinding Gesture="LeftClick" Command="{Binding VidioPopupCommand}" />
                </Grid.InputBindings>
            </Grid>
            <Grid Grid.Column="3">
                <Image Width="120" Source="{Binding WeatherImageSource}" Margin="0,0,66,0"/>

                <TextBlock Text="{Binding Temperature}" Margin="110,30,0,99" FontSize="21" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" />
            </Grid>
            <Button Grid.Column="2" Command="{Binding AppClosedCommand}" BorderThickness="0"  >
                <Button.Background>
                    <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                </Button.Background>
            </Button>
            <TextBlock x:Name="watchLabel" Grid.Column="4" Text="{Binding Watch}" Margin="15,30,12,0" FontSize="40" Height="59" Width="190" RenderTransformOrigin="0.483,0.595" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" HorizontalAlignment="Center" VerticalAlignment="Top"/>
            <TextBlock x:Name="weatherLabel" Grid.Column="4" Text="{Binding Week}"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="21" Margin="13,91,10,36" Height="26" Width="190" RenderTransformOrigin="0.489,1.81" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" />

        </Grid>

        <Grid Grid.Row="1" >
            <Grid.Background>
                <ImageBrush ImageSource="/DIDEx;component/Resources/main_bg.jpg"/>
            </Grid.Background>
            <ContentControl prism:RegionManager.RegionName="MainWindowRegion"  />
        </Grid>
        <!--<Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel>
                <Button Height="70px" Background="#FF35357A" Margin="200,45,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="#FF35357A" Margin="200,10,0,0" Width="500" Content="개발행위허가" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
            </StackPanel>
            <StackPanel Grid.Column="1">
                <Button Height="70" Background="Black" Width="150" Margin="-5,45,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
                <Button Height="70" Background="Black" Width="150" Margin="-5,5,5,5" Content="위치보기" FontFamily="/DIDEx;component/Resources/#S-Core Dream 5 Medium" FontSize="35" Foreground="White"/>
            </StackPanel>
        </Grid>-->
        
        <Grid Grid.Row="2" Height="200" Background="White">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <RadioButton x:Name="mainMenuRadio" Grid.Column="0"  Command="{Binding MenuSelectCommand}" IsChecked="{Binding RadioCheckedCommand}"   CommandParameter="민원안내" Style="{DynamicResource RadioButtonStyle2}" Background="{x:Null}" >

            </RadioButton>
            <RadioButton Grid.Column="1"  Command="{Binding MenuSelectCommand}" CommandParameter="조직도" Style="{DynamicResource RadioButtonStyle3}" Background="{x:Null}"/>
            <RadioButton Grid.Column="2"  Command="{Binding MenuSelectCommand}" CommandParameter="청사소개" Style="{DynamicResource RadioButtonStyle4}" Background="{x:Null}"/>
            <RadioButton Grid.Column="3"  Command="{Binding MenuSelectCommand}" CommandParameter="포토갤러리" Style="{DynamicResource RadioButtonStyle5}" Background="{x:Null}"/>
        </Grid>



    </Grid>
</Window>
